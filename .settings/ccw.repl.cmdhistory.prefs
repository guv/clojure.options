#Thu Mar 15 22:26:50 CET 2012
cmdhistory=[";; Switching to test.clojure.options namespace" "(doc increase)" ";; Loading file test/clojure/options.clj" "(doc increase)" "(doc threading-impl)" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" "(macroexpand-1 '(-> x (increase options) (+ y)))" "(-> '(-> x (increase options) (+ y))\\n  macroexpand-1\\n  macroexpand-1)" "(-> '(-> x (increase options) (+ y))\\n  macroexpand-1\\n  macroexpand-1\\n  macroexpand-1)" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" "(list? '(a 1 2))" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" "(doc threading-impl)" "(seq? (cons 1 nil))" "(seq? [])" "(seq? {})" "(cons 1 nil)" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" "(doc threading-impl)" ";; Loading file test/clojure/options.clj" "(doc threading-impl)" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" ";; Loading file src/clojure/options.clj" ";; Loading file test/clojure/options.clj" "(resolve 'increase)" ";; Switching to test.clojure.options namespace" ";; Loading file test/clojure/options.clj" "(resolve 'increase)" "(resolve 'increas)" "(meta increase)" "(meta \#'increase)" ";; Loading file test/clojure/options_tests.clj" "(defn+opts y [])" "(meta \#'y)" "(y 10)" "(y \:test 10)" ";; Loading file test/clojure/options_tests.clj" "(\= 'y (quote 'y))" "(\= 'y (quote y))" "(\= 'y (symbol \\"y\\"))" ";; Loading file test/clojure/options_tests.clj" "(meta \#'f)" ";; Loading file test/clojure/options_tests.clj" "(meta \#'f)" ";; Switching to clojure.options-tests namespace" ";; Loading file test/clojure/options_tests.clj" "(meta \#'f)" ";; Loading file test/clojure/options_tests.clj" "(doc f)" ";; Loading file test/clojure/options_tests.clj" ";; Switching to clojure.options-tests namespace" ";; Loading file test/clojure/options_tests.clj" ";; Switching to clojure.options-tests namespace" ";; Loading file test/clojure/options_tests.clj" "(int->str 10)" "(int->str 10 \:base 2)" "(int->str 13 \:base 2)" "(int->str 13 \:base 3)" "(int->str 13 \:base 4)" "(map \#(int->str 13 \:base (inc %)) (range 10))" "(map \#(int->str 13 \:base %) (range 2 11))" "(map \#(int->str 9 \:base %) (range 2 11))" ";; Loading file test/clojure/options_tests.clj" "(doc int->str)" "(apropos \\"\=>\\")" ";; Loading file test/clojure/options_tests.clj" "(re-find \#\\"The base to use for string encoding (<\= 10)\\\\.\\" \\"Converts a given positive integer into a string.\\\\n\\\\n  The following options (in 'options) can be specified\:\\\\n    \:base  The base to use for string encoding (<\= 10).  [default \= 10]\\\\n\\\\n    \\")" "(doc re-find)" "(re-find \\n  \\"Converts a given positive integer into a string.\\\\n\\\\n  The following options (in 'options) can be specified\:\\\\n    \:base  The base to use for string encoding (<\= 10).  [default \= 10]\\\\n\\\\n    \\"\\n  \#\\"The base to use for string encoding (<\= 10)\\\\.\\")" "(re-find \#\\"The base to use for string encoding (<\= 10).\\" \\"Converts a given positive integer into a string.\\\\n\\\\n  The following options (in 'options) can be specified\:\\\\n    \:base  The base to use for string encoding (<\= 10).  [default \= 10]\\\\n\\\\n    \\")" "(re-find \#\\"The base to use for string encoding \\\\(<\= 10\\\\).\\" \\"Converts a given positive integer into a string.\\\\n\\\\n  The following options (in 'options) can be specified\:\\\\n    \:base  The base to use for string encoding (<\= 10).  [default \= 10]\\\\n\\\\n    \\")" ";; Loading file test/clojure/options_tests.clj" "(map \#(int->str 13 \:base %) (range 2 11))" ";; Loading file test/clojure/options_tests.clj"]
eclipse.preferences.version=1
